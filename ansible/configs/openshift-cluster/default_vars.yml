---
# -------------------------------------------------
# General variables
# -------------------------------------------------

# Why is this config being deployed? Override for specific environments
# Valid options are: development, test, production, event
purpose: development

# The output_dir holds all of the files generated during the deployment
# This includes generated Heat templates, SSH config, SSH keys
# This must be an absolute path and no vars (like $HOME or ~)
output_dir: /tmp/output_dir

# The {{ guid }} is used everywhere and it is what differentiates otherwise
# identical environments. Make this unique. Usually they are 4 characters, but
# it can be any reasonable length.
guid: notset

# Used to add metadata (tags) to cloud objects created
project_tag: "{{ config }}-{{ guid }}"

# Base Domain to be used for the environment
# Should ideally be set by a Sandbox and passed to the config
base_domain: redhatworkshops.io

# ===================================================================
# Additional Collections & roles to be installed for this config
# ===================================================================
# requirements_content:
#   collections:
#   # Core OpenShift Workloads
#   - name: https://github.com/agnosticd/core_workloads.git
#     type: git
#     version: main

# -------------------------------------------------
# Set up Bastion
# -------------------------------------------------
install_bastion: true

# Set up a student user on the bastion
bastion_setup_student_user: true

# Student User user name
bastion_student_user_name: lab-user

bastion_student_user_password: ""
# Password length for generated passwords
bastion_student_user_password_length: 12

# FTL is used for grading and solving. It will pull in the external ftl-injector role.
# When enabled a requirements.yml must exist in the config to specify the ftl-injector role and tag.
bastion_install_ftl: false

# Optional public key for authorized_keys
# bastion_student_user_key: ""

# Set agnosticd_user_info data with bastion access
# bastion_student_user_set_user_data: true

# Set agnosticd_user_info message with bastion access
# bastion_student_user_show_user_info: true

# -------------------------------------------------
# Call role host_satellite_repositories
# -------------------------------------------------
install_satellite_repositories: true

# These vars are needed and need to come from secrets:
# host_satellite_repositories_hostname:
# host_satellite_repositories_ha:
# host_satellite_repositories_org:
# host_satellite_repositories_activationkey:

# -------------------------------------------------
# Call role host_common_packages
# -------------------------------------------------
# Packages to install on all of the hosts deployed as part of the agnosticd config
# This invokes the host_common_packages role
install_common_packages: true

# To install extra packages (beyond what's in the common list of packages)
# host_common_packages_extramon_extra_packages:
# - java-17-openjdk
# - maven
# - podman

# Run a full dnf update on the hosts
host_common_packages_update_all: false

# -------------------------------------------------
# OpenShift
# -------------------------------------------------

# The name of the OpenShift cluster that will be deployed.
cluster_name: ocp

# Top level domain for this cluster (will be prepended with {{ cluster_name }})
cluster_dns_zone: "{{ guid }}.{{ base_domain }}"

# How to deploy OpenShift
# Valid values are
# - openshift_install
# - openshift_assisted
# - openshift_hcp_cnv
host_ocp4_deploy_installation_method: openshift_install

# Types of Nodes (workers / control_planes) are set in the
# cloud specific vars file
# Number of Nodes
control_plane_instance_count: 3
worker_instance_count: 2

# Types and Sizes of Disks for nodes
# Only set if you know what you're doing...
# control_plane_storage_type: "__DEFAULT__"
# control_plane_storage_size: "30Gi"
# worker_storage_type: "__DEFAULT__"
# worker_storage_size: "100Gi"

# Use 4.19 for latest available release in the `stable-4.19` directory.
# Use 4.19.1 for exactly the specified release
host_ocp4_installer_version: "4.19"

# See role host-ocp4-installer for additional OpenShift 4 Installer options
# E.g. OpenShift Cluster processor architectore or OpenShift installer download location

# Pull secret needs to be defined in secrets
# Get from https://try.openshift.com
# ocp4_pull_secret: ''

# Set to true to enable creating a cluster-admin service account during installation
openshift_cluster_admin_service_account_enable: false

# Print user info
openshift_cluster_show_access_user_info: true

# YAML List of Workloads to be run for post install configuration
# Empty by default - to be set by specific configurations
# Workloads run on the controller (in the execution environment)
workloads: []

# Suggested workloads for a minimum cluster:
#  - ocp4_workload_cert_manager
#  - ocp4_workload_authentication

# Some workloads create infrastructure that needs to be removed
# when deleting the software or infrastructure.
# Workloads run on the controller (in the execution environment)
remove_workloads: []
