---
- name: Approve CSRs
  module_defaults:
    group/k8s:
      host: "{{ openshift_api_url }}"
      api_key: "{{ openshift_cluster_admin_token }}"
      validate_certs: false
  block:
  - name: Get pending CSRs
    kubernetes.core.k8s_info:
      api_version: certificates.k8s.io/v1
      kind: CertificateSigningRequest
    register: all_csrs

  - name: Filter for pending CSRs
    ansible.builtin.set_fact:
      pending_csrs: "{{ all_csrs.resources | selectattr('status', 'eq', {}) | list }}"

  - name: Approve CSR directly via API
    when: pending_csrs is defined and pending_csrs | length > 0
    ansible.builtin.uri:
      url: "{{ openshift_api_url }}/apis/certificates.k8s.io/v1/certificatesigningrequests/{{ item.metadata.name }}/approval"
      validate_certs: false
      method: PUT
      headers:
        Authorization: "Bearer {{ openshift_cluster_admin_token }}"
        Content-Type: "application/json"
      body_format: json
      body: |
        {
          "apiVersion": "certificates.k8s.io/v1",
          "kind": "CertificateSigningRequest",
          "metadata": {
            "name": "{{ item.metadata.name }}"
          },
          "status": {
            "conditions": [
              {
                "type": "Approved",
                "status": "True",
                "reason": "AnsibleApproval",
                "message": "CSR was approved by Ansible."
              }
            ]
          }
        }
    loop: "{{ pending_csrs }}"

  - name: Get the current nodes
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Node
      label_selectors: "node-role.kubernetes.io/worker=,!node-role.kubernetes.io/control-plane,!node-role.kubernetes.io/master"
    register: r_worker_nodes

  - name: Count Ready nodes
    ansible.builtin.set_fact:
      ready_nodes_count: >-
        {{ r_worker_nodes
          | json_query("resources[].status.conditions[?type=='Ready' && status=='True']")
          | length }}

  - name: Include this tasks again if nodes doesn't appear
    when: (current_instance_workers | int + worker_instance_count | int) != ready_nodes_count | int
    block:
    - name: Wait for additional CertificateSigningRequests to appear
      ansible.builtin.pause:
        seconds: "10"
    - ansible.builtin.include_tasks: approve_csr_nodes.yaml

  - name: Prepare IngressController definition with integer replicas
    ansible.builtin.set_fact:
      ingress_definition: "{{ {} | combine({'spec': {'replicas': (current_instance_workers | int + worker_instance_count | int)}}) }}"

  - name: Scale IngressController to the number of workers
    kubernetes.core.k8s:
      state: present
      api_version: operator.openshift.io/v1
      kind: IngressController
      name: default
      namespace: openshift-ingress-operator
      definition: "{{ ingress_definition }}"
