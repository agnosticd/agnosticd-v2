---
- name: Step 0000 Install Galaxy roles and collections
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars:
    requirements_path: "configs/{{ config }}/requirements.yml"
    requirements_content: {}
  tasks:
  - name: Set output_dir if not defined
    when: output_dir is not defined
    ansible.builtin.set_fact:
      output_dir: '/tmp/output_dir'

  - name: Create output_dir if it does not exists
    ansible.builtin.file:
      path: "{{ output_dir }}"
      state: directory
      mode: ug=rwx,o=rx

  - name: Requirements_content is provided
    when: requirements_content | length > 0
    block:
    - name: Use requirements_content
      ansible.builtin.set_fact:
        requirements_path_final: "{{ output_dir }}/custom_requirements.yml"

    - name: Copy requirements content to output_dir
      ansible.builtin.copy:
        dest: "{{ requirements_path_final }}"
        content: "{{ requirements_content | to_yaml }}"
        mode: ug=rw,o=r

  - name: Use requirements_path from the config
    when: requirements_content | length == 0
    ansible.builtin.set_fact:
      requirements_path_final: "{{ requirements_path }}"

  - name: Check if requirements.yml exists
    ansible.builtin.stat:
      path: "{{ requirements_path_final }}"
    register: r_requirements_stat

  - name: Set final requirements path
    when: r_requirements_stat.stat.exists
    ansible.builtin.set_fact:
      r_requirements_content: "{{ lookup('file', requirements_path_final) | from_yaml }}"

  - name: Install roles from requirements.yml
    ansible.builtin.command: >-
      ansible-galaxy install
      --role-file "{{ requirements_path_final }}"
      --roles-path "{%- if requirements_content | length > 0 -%}
      {{ playbook_dir }}/dynamic_roles
      {%- else -%}
      {{ playbook_dir | default('.') }}/configs/{{ config }}/roles
      {%- endif -%}"
    when: >-
      r_requirements_stat.stat.exists
      and r_requirements_content | default([]) | length > 0
      and (r_requirements_content is sequence
            or (r_requirements_content is mapping
                and 'roles' in r_requirements_content)
          )
    register: r_ansible_galaxy_install_roles
    until: r_ansible_galaxy_install_roles is successful
    retries: 5
    delay: 10

  - name: Install collections
    when: >-
      r_requirements_content | default([]) | length > 0
      and r_requirements_content is mapping
      and "collections" in r_requirements_content
    ansible.builtin.include_tasks: install_collections.yml

  - name: Install cloud provider
    when: cloud_provider is defined and cloud_provider | length > 0 and cloud_provider != 'none'
    ansible.builtin.include_tasks: install_cloud_provider.yml

  - name: Install dynamic sources
    ansible.builtin.include_role:
      name: agnosticd_dynamic
