---
- name: Log in (obtain access token)
  when: sandbox_openshift_username | default("") | length > 0
  community.okd.openshift_auth:
    username: "{{ sandbox_openshift_username }}"
    password: "{{ sandbox_openshift_password }}"
    host: "{{ sandbox_openshift_api_url }}"
  register: k8s_auth_results

- name: Destroy OpenShift using Assisted Installer
  module_defaults:
    group/k8s:
      host: "{{ sandbox_openshift_api_url }}"
      api_key: "{{ k8s_auth_results.k8s_auth.api_key | default(sandbox_openshift_api_key) }}"
      validate_certs: false
  block:
  - name: Create a job to cleanup Ceph
    kubernetes.core.k8s:
      definition: "{{ lookup('ansible.builtin.template', 'cleanup-ceph.yaml.j2') | from_yaml }}"
      wait: true
      wait_timeout: 300
    register: r_cleanup
    retries: 3
    delay: 10
    ignore_errors: true

  - name: Delete DNS records (Route53)
    amazon.aws.route53:
      state: absent
      aws_access_key_id: "{{ route53_aws_access_key_id }}"
      aws_secret_access_key: "{{ route53_aws_secret_access_key }}"
      hosted_zone_id: "{{ route53_aws_zone_id }}"
      record: "{{ item }}.{{ cluster_name }}.{{ cluster_dns_zone }}"
      zone: "{{ cluster_dns_zone  }}"
      type: A
    loop:
    - "api"
    - "*.apps"

  - name: Get a list of clusters
    rhpds.assisted_installer.list_clusters:
      offline_token: "{{ ai_offline_token }}"
      owner: true
    register: listclusters

  - name: Filter the created clusters
    when: item.name == cluster_name
    ansible.builtin.set_fact:
      cluster_id: "{{ item.id }}"
    loop: "{{ listclusters.result }}"
    loop_control:
      label: "{{ item.name }}"

  - name: Remove Assisted Installer Cluster
    when: cluster_id | default("") | length > 0
    block:
    - name: Debug cluster id and name
      ansible.builtin.debug:
        msg: "Cluster to be removed: Cluster ID={{ cluster_id }}, Cluster Name={{ cluster_name }}"

    - name: Delete cluster in Red Hat Console
      rhpds.assisted_installer.delete_cluster:
        cluster_id: "{{ cluster_id }}"
        offline_token: "{{ ai_offline_token }}"
