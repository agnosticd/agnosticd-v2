---
- name: Create cluster-admin service account
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ openshift_cluster_admin_service_account_name }}"
        namespace: "{{ openshift_cluster_admin_service_account_namespace }}"

- name: Grant cluster-admin service account cluster-admin privileges
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: >-
          {{ 'cluster-admin:serviceaccount:%s:%s' | format(
            openshift_cluster_admin_service_account_namespace,
            openshift_cluster_admin_service_account_name
          ) }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: "{{ openshift_cluster_admin_service_account_name }}"
        namespace: "{{ openshift_cluster_admin_service_account_namespace }}"

- name: Create service account token secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/service-account-token
      metadata:
        name: "{{ openshift_cluster_admin_service_account_name }}-token"
        namespace: "{{ openshift_cluster_admin_service_account_namespace }}"
        annotations:
          kubernetes.io/service-account.name: "{{ openshift_cluster_admin_service_account_name }}"

- name: Get service account token and CA cert
  kubernetes.core.k8s_info:
    kind: Secret
    name: "{{ openshift_cluster_admin_service_account_name }}-token"
    namespace: "{{ openshift_cluster_admin_service_account_namespace }}"
  register: r_token_secret

- name: Set token and CA cert facts
  ansible.builtin.set_fact:
    _openshift_cluster_admin_token: "{{ r_token_secret.resources[0].data.token | b64decode }}"
    _openshift_api_ca_cert: "{{ r_token_secret.resources[0].data['ca.crt'] | b64decode }}"

- name: Save openshift_api_ca_cert and openshift_cluster_admin_token to user data
  agnosticd.core.agnosticd_user_info:
    data:
      openshift_cluster_admin_token: "{{ _openshift_cluster_admin_token }}"
      openshift_api_ca_cert: "{{ _openshift_api_ca_cert }}"
