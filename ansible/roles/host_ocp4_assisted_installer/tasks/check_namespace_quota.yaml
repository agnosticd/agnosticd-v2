- ansible.builtin.set_fact:
    _control_plane_memory_bytes:
      "{{ ai_control_plane_memory | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2') | ansible.builtin.human_to_bytes }}"
    _worker_plane_memory_bytes:
      "{{ ai_workers_memory | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2') | ansible.builtin.human_to_bytes }}"
    _control_plane_root_disk_bytes:
      "{{ ai_control_plane_root_disk_size | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2') | ansible.builtin.human_to_bytes }}"
    _control_plane_etcd_disk_bytes:
      "{{ ai_control_plane_etcd_disk_size | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2') | ansible.builtin.human_to_bytes }}"
    _worker_plane_root_disk_bytes: 
      "{{ ai_workers_root_disk_size | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2') | ansible.builtin.human_to_bytes }}"

- name: Calculate required cpu/memory/storage
  ansible.builtin.set_fact:
    _required_memory:
      "{{ (_control_plane_memory_bytes | int  * master_instance_count | int) +
         (_worker_plane_memory_bytes | int * worker_instance_count | int) }}"
    _required_cpu:
      "{{ (ai_control_plane_cores | int * master_instance_count | int) +
         (ai_workers_cores | int * worker_instance_count | int) }}"
    _required_storage:
      "{{ (_control_plane_root_disk_bytes | int * master_instance_count | int) +
         (_control_plane_etcd_disk_bytes | int * master_instance_count | int) +
         (_worker_plane_root_disk_bytes | int * worker_instance_count | int) }}"

- name: Get Quota information
  register: r_quota
  kubernetes.core.k8s_info:
    kind: "ResourceQuota"
    api_version: "v1"
    namespace: "{{ ai_ocp_namespace }}"
    name: "sandbox-quota"

- name: Check if quota is enough if defined
  when: r_quota.resources | length > 0
  block:
  - name: Set used variables and limit variables
    ansible.builtin.set_fact:
      _used_memory:
        "{{ r_quota.resources[0].status.used['limits.memory'] | default(0) | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2')
            | ansible.builtin.human_to_bytes }}"
      _used_cpu:
        "{{ (r_quota.resources[0].status.used['limits.cpu'] | default(0) | ansible.builtin.regex_replace('^(m)?$', '') | int) / 1000  | int}}"
      _used_storage:
        "{{ r_quota.resources[0].status.used['requests.storage'] | default(0) | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2')
              | ansible.builtin.human_to_bytes }}"
  
  - name: Set hard quota variables and limit variables
    ansible.builtin.set_fact:
      _hard_memory:
        "{{ r_quota.resources[0].status.hard['limits.memory'] | default(0) | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2')
            | ansible.builtin.human_to_bytes }}"
      _hard_cpu:
        "{{ r_quota.resources[0].status.hard['limits.cpu'] | default(0) | ansible.builtin.regex_replace('^(m)?$', '') | int }}"
      _hard_storage:
        "{{ r_quota.resources[0].status.hard['requests.storage'] | default(0) | ansible.builtin.regex_replace('^([0-9.]+)([KMGTP])i?B?$', '\\1 \\2')
              | ansible.builtin.human_to_bytes }}"
  
  - name: Check if quota allows to requested memory
    ansible.builtin.assert:
      that:
      - (_used_memory | int + _required_memory | int) <  _hard_memory | int
      fail_msg: >-
        memory quota has to be increased to at least {{ (_used_memory | int + _required_memory | int) | ansible.builtin.human_readable }},
        currently {{ _hard_memory  | int | ansible.builtin.human_readable }}
  
  - name: Check if quota allows to requested cpu
    ansible.builtin.assert:
      that:
      - (_used_cpu | int + _required_cpu | int) <  _hard_cpu | int
      fail_msg: >-
        cpu quota has to be increased to at least {{ (_used_cpu | int + _required_cpu | int) | ansible.builtin.human_readable }},
        currently {{ _hard_cpu  | int | ansible.builtin.human_readable }}
  
  - name: Check if quota allows to requested storage
    ansible.builtin.assert:
      that:
      - (_used_storage | int + _required_storage | int) <  _hard_storage | int
      fail_msg: >-
        storage quota has to be increased to at least {{ (_used_storage | int + _required_storage | int) | ansible.builtin.human_readable }},
        currently {{ _hard_storage  | int | ansible.builtin.human_readable }}
